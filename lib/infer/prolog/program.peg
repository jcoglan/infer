grammar Infer.Prolog.Program

program         <-  _ (entry _)*                                    %mk_program

entry           <-  fact / rule
fact            <-  head _ "."                                      %mk_fact
rule            <-  head _ ":-" _ goal (comma goal)* _ "."          %mk_rule

head            <-  infix / compound / atom
goal            <-  cut / infix / operand
infix           <-  equality
operand         <-  list / compound / variable / atom

cut             <-  "!"                                             %mk_cut

equality        <-  operand _ "=" _ operand                         %mk_infix

list            <-  "[" _ list_contents? _ "]"                      %mk_list
list_contents   <-  operand (comma operand)* (_ "|" _ operand)?     %mk_list_contents

compound        <-  atom "(" _ operand (comma operand)* _ ")"       %mk_compound

variable        <-  [A-Z_] [A-Za-z0-9_]*                            %mk_var
atom            <-  [^\[\]|()\sA-Z!,.;-]+                           %mk_atom

comma           <-  _ "," _

comment         <-  "%" [^\n]* / "/*" (!"*/" .)* "*/"
_               <-  (comment / [\s])*
