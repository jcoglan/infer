grammar Infer.Prolog.Program

program         <-  _ (entry _)*                                    %mk_program

entry           <-  fact / rule
fact            <-  head _ "."                                      %mk_fact
rule            <-  head _ ":-" _ goal (comma goal)* _ "."          %mk_rule

head            <-  comparison / compound / atom
goal            <-  cut / comparison / operand
comparable      <-  sum / summand
summand         <-  operand
operand         <-  list / compound / variable / integer / atom

cut             <-  "!"                                             %mk_cut

comparison      <-  comparable _ comparator _ comparable            %mk_infix
sum             <-  summand _ [+-] _ comparable                     %mk_infix

comparator      <-  "=" / "is"

list            <-  "[" _ list_contents? _ "]"                      %mk_list
list_contents   <-  operand (comma operand)* (_ "|" _ operand)?     %mk_list_contents

compound        <-  atom "(" _ operand (comma operand)* _ ")"       %mk_compound

variable        <-  [A-Z_] [A-Za-z0-9_]*                            %mk_var
integer         <-  [0-9]+                                          %mk_integer
atom            <-  [^\[\]|()\sA-Z!,.;-]+                           %mk_atom

comma           <-  _ "," _

comment         <-  "%" [^\n]* / "/*" (!"*/" .)* "*/"
_               <-  (comment / [\s])*
