grammar Infer.Grammar

language      <-  _ (block _)*                                %mk_language

block         <-  extends_blk / syntax_blk / rule_blk / text

extends_blk   <-  "extends" sp+ [^\s]+                        %mk_extends

syntax_blk    <-  "syntax" _ lb _ (syntax_smt _)* rb          %mk_syntax_block
syntax_smt    <-  var assign expr (_ "/" _ el:expr)*          %mk_syntax_clause

rule_blk      <-  "rule" sp+ keyword _ lb _ rule_expr _ rb    %mk_rule
rule_expr     <-  (expr (_ "/" _ expr)* sp* then _)? expr
then          <-  nl sp* "-"+ sp* nl

text          <-  [^\n\r]* [\n\r]

lb            <-  "{"
rb            <-  "}"

var           <-  "$" ([A-Za-z]+ / .) [0-9]* "'"*             %mk_var
refvar        <-  var !assign                                 %mk_refvar
assign        <-  _ "::=" _

cut           <-  "<!>"                                       %mk_cut

expr          <-  element (sp* el:element)*                   %mk_expr
element       <-  sub_expr / cut / keyword / refvar
sub_expr      <-  "(" _ expr _ ")"                            %mk_sub_expr

keyword       <-  [A-Za-z0-9] [A-Za-z0-9-]*                   %mk_keyword
               /  [^A-Za-z0-9\s(){}/$#]+                      %mk_keyword

comment       <-  "#" [^\n\r]*
sp            <-  [ \t] / comment
nl            <-  [\n\r]
_             <-  (sp / nl)*
